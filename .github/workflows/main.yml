name: Deploy to AKS from ACR

on:
  push:
    branches:
      - main  # Adjust branch name as needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
     
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install Trufflehog
      run: pip install trufflehog
      
    - name: Run Trufflehog scan
      run: |
        trufflehog --json --regex --entropy=False . > trufflehog_report.json
        sh 'cat trufflehog_report.json
      continue-on-error: true

    - name: Upload Trufflehog report
      uses: actions/upload-artifact@v2
      with:
        name: trufflehog-report
        path: trufflehog_report.json
#    - name: SonarQube Scan
#      uses: sonarsource/sonarqube-scan-action@master
 #     env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  #  - name: Generate Image Tag
   #   id: generate_tag
  #    run: echo "::set-output name=image_tag::latest"

 #   - name: Update deployment.yaml
 #     run: |
 #      sed -i'' "s|image:[^:]*$|image: nani01071993.azurecr.io/asg:${{ steps.get_image_tag.outputs.image_tag }}|g" deployment.yaml
#    - name: Login to Azure Container Registry
  #    uses: azure/docker-login@v1
  #    with:
     #   login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #      username: ${{ secrets.REGISTRY_USERNAME }}
    #    password: ${{ secrets.REGISTRY_PASSWORD }}     
    
  #  - name: Build Docker image
   #   run: | 
   #      docker build -t asg:${{ steps.generate_tag.outputs.image_tag }} .
    #     docker tag asg:${{ steps.generate_tag.outputs.image_tag }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/asg:${{ steps.generate_tag.outputs.image_tag }}
     #    docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/asg:${{ steps.generate_tag.outputs.image_tag }}
    
  #  - name: Azure CLI login
 #     uses: azure/login@v1
  #    with:
    #   creds: ${{ secrets.AZURE_CREDENTIALS }}

#    - name: Set AKS context
#      run: az aks get-credentials --resource-group Naveen --name nanitest

#    - name: Deploy to AKS
#      run: kubectl apply -f deployment.yaml
